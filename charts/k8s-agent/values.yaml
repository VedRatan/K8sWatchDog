# Default values for charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

labels:
  # -- sepcify labels to the deployment
  app: k8s-agent

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # -- This is the URL of the Docker registry where the container image will be stored.
  imageRegistry: docker.io

  # -- This is the name of the Docker repository where the container image will be stored.
  imageRepository: lusciousmaestro

  # -- In case of private registry you can specify the registry user name.
  registryUserName:

  # -- In case of private registry you can specify the registry password.
  registryPassword:

  # -- This sets the pull policy for images.
  pullPolicy: IfNotPresent

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # -- This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: LoadBalancer
  # -- This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  # -- This sets the target port
  targetPort: 8080

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5  # Wait 5 seconds before starting probes
  periodSeconds: 10       # Check every 10 seconds
  timeoutSeconds: 2       # Timeout after 1 second
  failureThreshold: 3     # Mark as failed after 3 consecutive failures
readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5  # Wait 5 seconds before starting probes
  periodSeconds: 10       # Check every 10 seconds
  timeoutSeconds: 2       # Timeout after 1 second
  successThreshold: 1     # Mark as ready after 1 consecutive success
  failureThreshold: 3     # Mark as failed after 3 consecutive failures


# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
